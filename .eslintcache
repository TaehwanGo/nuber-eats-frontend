[{"C:\\github\\nuber-eats-frontend\\src\\App.tsx":"1","C:\\github\\nuber-eats-frontend\\src\\reportWebVitals.ts":"2","C:\\github\\nuber-eats-frontend\\src\\index.tsx":"3","C:\\github\\nuber-eats-frontend\\src\\routers\\logged-out-router.tsx":"4","C:\\github\\nuber-eats-frontend\\src\\apollo.ts":"5","C:\\github\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx":"6","C:\\github\\nuber-eats-frontend\\src\\pages\\login.tsx":"7","C:\\github\\nuber-eats-frontend\\src\\pages\\create-account.tsx":"8","C:\\github\\nuber-eats-frontend\\src\\components\\form-error.tsx":"9","C:\\github\\nuber-eats-frontend\\src\\components\\button.tsx":"10","C:\\github\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts":"11","C:\\github\\nuber-eats-frontend\\src\\constants.ts":"12","C:\\github\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx":"13","C:\\github\\nuber-eats-frontend\\src\\pages\\404.tsx":"14","C:\\github\\nuber-eats-frontend\\src\\components\\header.tsx":"15","C:\\github\\nuber-eats-frontend\\src\\hooks\\useMe.tsx":"16","C:\\github\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"17","C:\\github\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx":"18"},{"size":853,"mtime":1611588922528,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1611520125186,"results":"21","hashOfConfig":"20"},{"size":756,"mtime":1611680244813,"results":"22","hashOfConfig":"20"},{"size":641,"mtime":1611688050087,"results":"23","hashOfConfig":"20"},{"size":1518,"mtime":1611685048420,"results":"24","hashOfConfig":"20"},{"size":1350,"mtime":1611774233470,"results":"25","hashOfConfig":"20"},{"size":4139,"mtime":1611777596643,"results":"26","hashOfConfig":"20"},{"size":4844,"mtime":1611777566880,"results":"27","hashOfConfig":"20"},{"size":318,"mtime":1611589323690,"results":"28","hashOfConfig":"20"},{"size":485,"mtime":1611668239414,"results":"29","hashOfConfig":"20"},{"size":916,"mtime":1611832040608,"results":"30","hashOfConfig":"20"},{"size":228,"mtime":1611777499861,"results":"31","hashOfConfig":"20"},{"size":1970,"mtime":1611835075107,"results":"32","hashOfConfig":"20"},{"size":582,"mtime":1611831445403,"results":"33","hashOfConfig":"20"},{"size":1639,"mtime":1611780874860,"results":"34","hashOfConfig":"20"},{"size":281,"mtime":1611692320697,"results":"35","hashOfConfig":"20"},{"size":1900,"mtime":1611780981870,"results":"36","hashOfConfig":"20"},{"size":3121,"mtime":1611781029910,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"npjdl",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},"C:\\github\\nuber-eats-frontend\\src\\App.tsx",[],["80","81"],"C:\\github\\nuber-eats-frontend\\src\\reportWebVitals.ts",[],["82","83"],"C:\\github\\nuber-eats-frontend\\src\\index.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\routers\\logged-out-router.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\apollo.ts",[],["84","85"],"C:\\github\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx",["86"],"import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { Restaurants } from '../pages/client/restaurant';\nimport { Header } from '../components/header';\nimport { useMe } from '../hooks/useMe';\nimport { ConfirmEmail } from '../pages/user/confirm-email';\nimport { EditProfile } from '../pages/user/edit-profile';\nimport { NotFound } from '../pages/404';\n\n//<></> : fragment : parent없이 많은 element를 동시에 return 할 수 있게 됨\nconst ClientRoutes = [\n  <Route key={1} path=\"/confirm\" exact>\n    <ConfirmEmail />\n  </Route>,\n  <Route key={2} path=\"/\" exact>\n    <Restaurants />\n  </Route>,\n  <Route key={3} path=\"/edit-profile\" exact>\n    <EditProfile />\n  </Route>,\n];\n\nexport const LoggedInRouter = () => {\n  const { data, loading, error } = useMe();\n  // console.log(error);\n  // console.log(data?.me.role);\n  if (!data || loading || error) {\n    return (\n      <div className=\"h-screen flex justify-center items-center\">\n        <span className=\"font-medium text-xl tracking-wide\">Loading...</span>\n      </div>\n    );\n  }\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        {data.me.role === 'Client' && ClientRoutes}\n        {/* <Redirect to=\"/\" /> */}\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n",["87","88"],"C:\\github\\nuber-eats-frontend\\src\\pages\\login.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\pages\\create-account.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\components\\form-error.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\components\\button.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],"C:\\github\\nuber-eats-frontend\\src\\constants.ts",[],"C:\\github\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\pages\\404.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\components\\header.tsx",["89"],"C:\\github\\nuber-eats-frontend\\src\\hooks\\useMe.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["90","91","92","93"],"C:\\github\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx",["94"],"import { gql, useApolloClient, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Button } from '../../components/button';\nimport { EMAIL_REGEX } from '../../constants';\nimport { useMe } from '../../hooks/useMe';\nimport {\n  editProfile,\n  editProfileVariables,\n} from '../../__generated__/editProfile';\n\ninterface IFormProps {\n  email?: string;\n  password?: string;\n}\n\nconst EDIT_PROFILE_MUTATION = gql`\n  mutation editProfile($input: EditProfileInput!) {\n    editProfile(input: $input) {\n      ok\n      error\n    }\n  }\n`;\n\nexport const EditProfile = () => {\n  const { data: userData, refetch } = useMe();\n  const { register, handleSubmit, getValues, formState } = useForm<IFormProps>({\n    defaultValues: {\n      email: userData?.me.email,\n    },\n    mode: 'onChange',\n  });\n  const client = useApolloClient();\n  const onCompleted = async (data: editProfile) => {\n    const {\n      editProfile: { ok },\n    } = data;\n    if (ok && userData) {\n      //update cache\n      const {\n        me: { email: prevEmail, id },\n      } = userData;\n      const { email: newEmail } = getValues();\n      if (prevEmail !== newEmail) {\n        client.writeFragment({\n          id: `User:${id}`,\n          fragment: gql`\n            fragment EditedUser on User {\n              verified\n              email\n            }\n          `,\n          data: {\n            email: newEmail,\n            verified: false,\n          },\n        });\n      }\n      //   await refetch();\n    }\n  };\n  const [editProfile, { loading }] = useMutation<\n    editProfile,\n    editProfileVariables\n  >(EDIT_PROFILE_MUTATION, { onCompleted });\n\n  const onSubmit = () => {\n    // getValues 후 edit profile mutation을 call\n    // 그리고 cache도 update : 나중에 다른 스크린에 필요할 수도 있으므로\n    const { email, password } = getValues();\n    editProfile({\n      variables: {\n        input: {\n          email,\n          ...(password !== '' && { password }), // 아무것도 입력안해서 password에 \"\"들어간 경우 password 항목자체가 없게 해서 \"\"으로 password가 변경되는 것을 막아줌\n        },\n      },\n    });\n  };\n  return (\n    <div className=\"w-full flex flex-col px-5 items-center\">\n      <div className=\"w-full max-w-screen-sm \">\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\n          Edit Profile\n        </h4>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className=\"grid gap-3 mt-5 w-full mb-5\"\n        >\n          <input\n            ref={register({\n              pattern: EMAIL_REGEX,\n            })}\n            name=\"email\"\n            className=\"input\"\n            type=\"email\"\n            placeholder=\"Email\"\n          />\n          <input\n            ref={register}\n            name=\"password\"\n            className=\"input\"\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n          <Button\n            loading={loading}\n            canClick={formState.isValid}\n            actionText=\"Save Profile\"\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"95","replacedBy":"99"},{"ruleId":"97","replacedBy":"100"},{"ruleId":"95","replacedBy":"101"},{"ruleId":"97","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":4,"column":3,"nodeType":"105","messageId":"106","endLine":4,"endColumn":11},{"ruleId":"95","replacedBy":"107"},{"ruleId":"97","replacedBy":"108"},{"ruleId":"103","severity":1,"message":"109","line":11,"column":11,"nodeType":"105","messageId":"106","endLine":11,"endColumn":15},{"ruleId":"103","severity":1,"message":"110","line":3,"column":22,"nodeType":"105","messageId":"106","endLine":3,"endColumn":33},{"ruleId":"103","severity":1,"message":"111","line":20,"column":27,"nodeType":"105","messageId":"106","endLine":20,"endColumn":34},{"ruleId":"103","severity":1,"message":"112","line":55,"column":12,"nodeType":"105","messageId":"106","endLine":55,"endColumn":13},{"ruleId":"113","severity":1,"message":"114","line":63,"column":6,"nodeType":"115","endLine":63,"endColumn":8,"suggestions":"116"},{"ruleId":"103","severity":1,"message":"111","line":27,"column":27,"nodeType":"105","messageId":"106","endLine":27,"endColumn":34},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],["117"],["118"],["117"],["118"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["117"],["118"],"'data' is assigned a value but never used.","'useLocation' is defined but never used.","'refetch' is assigned a value but never used.","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyEmail'. Either include it or remove the dependency array.","ArrayExpression",["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [verifyEmail]",{"range":"122","text":"123"},[1578,1580],"[verifyEmail]"]