[{"C:\\github\\nuber-eats-frontend\\src\\App.tsx":"1","C:\\github\\nuber-eats-frontend\\src\\reportWebVitals.ts":"2","C:\\github\\nuber-eats-frontend\\src\\index.tsx":"3","C:\\github\\nuber-eats-frontend\\src\\routers\\logged-out-router.tsx":"4","C:\\github\\nuber-eats-frontend\\src\\apollo.ts":"5","C:\\github\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx":"6","C:\\github\\nuber-eats-frontend\\src\\pages\\login.tsx":"7","C:\\github\\nuber-eats-frontend\\src\\pages\\create-account.tsx":"8","C:\\github\\nuber-eats-frontend\\src\\components\\form-error.tsx":"9","C:\\github\\nuber-eats-frontend\\src\\components\\button.tsx":"10","C:\\github\\nuber-eats-frontend\\src\\constants.ts":"11","C:\\github\\nuber-eats-frontend\\src\\pages\\404.tsx":"12","C:\\github\\nuber-eats-frontend\\src\\components\\header.tsx":"13","C:\\github\\nuber-eats-frontend\\src\\hooks\\useMe.tsx":"14","C:\\github\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"15","C:\\github\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx":"16","C:\\github\\nuber-eats-frontend\\src\\components\\restaurant.tsx":"17","C:\\github\\nuber-eats-frontend\\src\\pages\\client\\search.tsx":"18","C:\\github\\nuber-eats-frontend\\src\\components\\categories.tsx":"19","C:\\github\\nuber-eats-frontend\\src\\pages\\client\\category.tsx":"20","C:\\github\\nuber-eats-frontend\\src\\fragment.ts":"21","C:\\github\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts":"22","C:\\github\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx":"23","C:\\github\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx":"24"},{"size":853,"mtime":1611588922528,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1611520125186,"results":"27","hashOfConfig":"26"},{"size":828,"mtime":1611923798615,"results":"28","hashOfConfig":"26"},{"size":641,"mtime":1611688050087,"results":"29","hashOfConfig":"26"},{"size":1518,"mtime":1611685048420,"results":"30","hashOfConfig":"26"},{"size":1657,"mtime":1611862457072,"results":"31","hashOfConfig":"26"},{"size":4139,"mtime":1611777596643,"results":"32","hashOfConfig":"26"},{"size":4844,"mtime":1611777566880,"results":"33","hashOfConfig":"26"},{"size":318,"mtime":1611589323690,"results":"34","hashOfConfig":"26"},{"size":485,"mtime":1611668239414,"results":"35","hashOfConfig":"26"},{"size":228,"mtime":1611777499861,"results":"36","hashOfConfig":"26"},{"size":582,"mtime":1611831445403,"results":"37","hashOfConfig":"26"},{"size":1639,"mtime":1611780874860,"results":"38","hashOfConfig":"26"},{"size":281,"mtime":1611692320697,"results":"39","hashOfConfig":"26"},{"size":2019,"mtime":1611831488074,"results":"40","hashOfConfig":"26"},{"size":3240,"mtime":1611831458001,"results":"41","hashOfConfig":"26"},{"size":824,"mtime":1611862534335,"results":"42","hashOfConfig":"26"},{"size":1680,"mtime":1611934740433,"results":"43","hashOfConfig":"26"},{"size":521,"mtime":1611858079596,"results":"44","hashOfConfig":"26"},{"size":1276,"mtime":1611860418568,"results":"45","hashOfConfig":"26"},{"size":364,"mtime":1611860050449,"results":"46","hashOfConfig":"26"},{"size":1139,"mtime":1611863027515,"results":"47","hashOfConfig":"26"},{"size":5614,"mtime":1611947890839,"results":"48","hashOfConfig":"26"},{"size":1616,"mtime":1611866406526,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"npjdl",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},"C:\\github\\nuber-eats-frontend\\src\\App.tsx",[],["104","105"],"C:\\github\\nuber-eats-frontend\\src\\reportWebVitals.ts",[],["106","107"],"C:\\github\\nuber-eats-frontend\\src\\index.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\routers\\logged-out-router.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\apollo.ts",[],["108","109"],"C:\\github\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\pages\\login.tsx",[],["110","111"],"C:\\github\\nuber-eats-frontend\\src\\pages\\create-account.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\components\\form-error.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\components\\button.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\constants.ts",[],"C:\\github\\nuber-eats-frontend\\src\\pages\\404.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\components\\header.tsx",["112"],"C:\\github\\nuber-eats-frontend\\src\\hooks\\useMe.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["113","114","115","116"],"C:\\github\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx",["117"],"C:\\github\\nuber-eats-frontend\\src\\components\\restaurant.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\pages\\client\\search.tsx",["118","119"],"import { gql, useLazyQuery } from '@apollo/client';\nimport React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { RESTAURANT_FRAGMENT } from '../../fragment';\nimport {\n  searchRestaurantInput,\n  searchRestaurantInputVariables,\n} from '../../__generated__/searchRestaurantInput';\n\nconst SEARCH_RESTAURANTS = gql`\n  query searchRestaurantInput($input: SearchRestaurantInput!) {\n    searchRestaurantByName(input: $input) {\n      ok\n      error\n      totalPages\n      totalResults\n      restaurants {\n        ...RestaurantParts\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n`;\n\nexport const Search = () => {\n  const location = useLocation();\n  const history = useHistory();\n  // LazyQuery는 조건부 query를 가능하게 함\n  const [callQuery, { loading, data, called }] = useLazyQuery<\n    searchRestaurantInput,\n    searchRestaurantInputVariables\n  >(SEARCH_RESTAURANTS); // callQuery()를 실행해야만 data를 얻을 수 있음\n  useEffect(() => {\n    const [_, query] = location.search.split('?term=');\n    if (!query) {\n      return history.replace('/');\n    }\n    // 방법1. searchTerm을 state로 설정 할 수 있음\n    // 방법2. state설정 없이 Lazy Query를 만드는 것(우리가 할 방법)\n    callQuery({\n      variables: {\n        input: {\n          page: 1,\n          query,\n        },\n      },\n    });\n    console.log(loading, data, called); // called는 query가 실행됐는지 안됐는지 알려줌\n  }, [history, location]);\n  return (\n    <h1>\n      <Helmet>\n        <title>Search | Nuber Eats</title>\n      </Helmet>\n      Search page\n    </h1>\n  );\n};\n","C:\\github\\nuber-eats-frontend\\src\\components\\categories.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\pages\\client\\category.tsx",["120","121","122"],"C:\\github\\nuber-eats-frontend\\src\\fragment.ts",[],"C:\\github\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],"C:\\github\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx",["123"],"import { gql, useQuery } from '@apollo/client';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { RESTAURANT_FRAGMENT } from '../../fragment';\nimport {\n  restaurantDetailQuery,\n  restaurantDetailQueryVariables,\n} from '../../__generated__/restaurantDetailQuery';\n\nconst RESTAURANT_QUERY = gql`\n  query restaurantDetailQuery($input: RestaurantInput!) {\n    findRestaurantById(input: $input) {\n      ok\n      error\n      restaurant {\n        ...RestaurantParts\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n`;\n\ninterface IRestaurantParams {\n  id: string;\n}\n\nexport const RestaurantDetail = () => {\n  const params = useParams<IRestaurantParams>();\n  const { loading, data } = useQuery<\n    restaurantDetailQuery,\n    restaurantDetailQueryVariables\n  >(RESTAURANT_QUERY, {\n    variables: {\n      input: {\n        restaurantId: +params.id, // parseInt(params.id),\n      },\n    },\n  });\n  console.log(data);\n  return (\n    <div>\n      <div\n        className=\"bg-gray-300 bg-center bg-cover py-32 md:py-40 lg:py-52\"\n        style={{\n          backgroundImage: `url(${data?.findRestaurantById.restaurant?.coverImage})`,\n        }}\n      >\n        <div className=\"w-full px-5 xl:px-0 max-w-screen-xl mx-auto\">\n          <div className=\"max-w-screen-sm py-4 text-white\">\n            <h4 className=\"text-4xl mb-2\">\n              {data?.findRestaurantById.restaurant?.name}\n            </h4>\n            <h5>{data?.findRestaurantById.restaurant?.category?.name}</h5>\n            <h5>{data?.findRestaurantById.restaurant?.address}</h5>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n",{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"124","replacedBy":"128"},{"ruleId":"126","replacedBy":"129"},{"ruleId":"124","replacedBy":"130"},{"ruleId":"126","replacedBy":"131"},{"ruleId":"124","replacedBy":"132"},{"ruleId":"126","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":11,"column":11,"nodeType":"136","messageId":"137","endLine":11,"endColumn":15},{"ruleId":"134","severity":1,"message":"138","line":4,"column":22,"nodeType":"136","messageId":"137","endLine":4,"endColumn":33},{"ruleId":"134","severity":1,"message":"139","line":21,"column":27,"nodeType":"136","messageId":"137","endLine":21,"endColumn":34},{"ruleId":"134","severity":1,"message":"140","line":56,"column":12,"nodeType":"136","messageId":"137","endLine":56,"endColumn":13},{"ruleId":"141","severity":1,"message":"142","line":64,"column":6,"nodeType":"143","endLine":64,"endColumn":8,"suggestions":"144"},{"ruleId":"134","severity":1,"message":"139","line":28,"column":27,"nodeType":"136","messageId":"137","endLine":28,"endColumn":34},{"ruleId":"134","severity":1,"message":"140","line":35,"column":12,"nodeType":"136","messageId":"137","endLine":35,"endColumn":13},{"ruleId":"141","severity":1,"message":"145","line":50,"column":6,"nodeType":"143","endLine":50,"endColumn":25,"suggestions":"146"},{"ruleId":"134","severity":1,"message":"147","line":2,"column":17,"nodeType":"136","messageId":"137","endLine":2,"endColumn":26},{"ruleId":"134","severity":1,"message":"138","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":21},{"ruleId":"134","severity":1,"message":"148","line":39,"column":17,"nodeType":"136","messageId":"137","endLine":39,"endColumn":24},{"ruleId":"134","severity":1,"message":"148","line":29,"column":11,"nodeType":"136","messageId":"137","endLine":29,"endColumn":18},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],["149"],["150"],["149"],["150"],["149"],["150"],"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'refetch' is assigned a value but never used.","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyEmail'. Either include it or remove the dependency array.","ArrayExpression",["151"],"React Hook useEffect has missing dependencies: 'callQuery', 'called', 'data', and 'loading'. Either include them or remove the dependency array.",["152"],"'useEffect' is defined but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [verifyEmail]",{"range":"157","text":"158"},"Update the dependencies array to be: [callQuery, called, data, history, loading, location]",{"range":"159","text":"160"},[1617,1619],"[verifyEmail]",[1402,1421],"[callQuery, called, data, history, loading, location]"]