[{"C:\\github\\nuber-eats-frontend\\src\\App.tsx":"1","C:\\github\\nuber-eats-frontend\\src\\reportWebVitals.ts":"2","C:\\github\\nuber-eats-frontend\\src\\index.tsx":"3","C:\\github\\nuber-eats-frontend\\src\\routers\\logged-out-router.tsx":"4","C:\\github\\nuber-eats-frontend\\src\\apollo.ts":"5","C:\\github\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx":"6","C:\\github\\nuber-eats-frontend\\src\\pages\\login.tsx":"7","C:\\github\\nuber-eats-frontend\\src\\pages\\create-account.tsx":"8","C:\\github\\nuber-eats-frontend\\src\\components\\form-error.tsx":"9"},{"size":853,"mtime":1611588922528,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1611520125186,"results":"12","hashOfConfig":"11"},{"size":654,"mtime":1611561131416,"results":"13","hashOfConfig":"11"},{"size":538,"mtime":1611581396306,"results":"14","hashOfConfig":"11"},{"size":723,"mtime":1611572607456,"results":"15","hashOfConfig":"11"},{"size":288,"mtime":1611569460009,"results":"16","hashOfConfig":"11"},{"size":3166,"mtime":1611600015900,"results":"17","hashOfConfig":"11"},{"size":106,"mtime":1611581188720,"results":"18","hashOfConfig":"11"},{"size":318,"mtime":1611589323690,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"npjdl",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\github\\nuber-eats-frontend\\src\\App.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\reportWebVitals.ts",[],"C:\\github\\nuber-eats-frontend\\src\\index.tsx",[],["41","42"],"C:\\github\\nuber-eats-frontend\\src\\routers\\logged-out-router.tsx",[],["43","44"],"C:\\github\\nuber-eats-frontend\\src\\apollo.ts",[],"C:\\github\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\pages\\login.tsx",["45"],"import { ApolloError, gql, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormError } from '../components/form-error';\nimport {\n  loginMutation,\n  loginMutationVariables,\n} from '../__generated__/loginMutation';\n\n// 아래 mutation이름 (PotatoMutation)은 백엔드로 가는게 아니라 프론트에서 쓰여질 것임(Apollo)\n// Apollo는 이 변수들을 살펴보고 내가 작성한 변수들을 가지고 mutation을 만들음\nconst LOGIN_MUTATION = gql`\n  mutation loginMutation($loginInput: LoginInput!) {\n    login(input: $loginInput) {\n      ok\n      token\n      error\n    }\n  }\n`;\n\ninterface ILoginForm {\n  email: string;\n  password: string;\n}\n\nexport const Login = () => {\n  const { register, getValues, errors, handleSubmit } = useForm<ILoginForm>();\n  const onCompleted = (data: loginMutation) => {\n    const {\n      login: { error, ok, token },\n    } = data;\n    if (ok) {\n      console.log(token);\n    } else {\n      console.log(error);\n    }\n  };\n  const [loginMutation, { data: loginMutationResult }] = useMutation<\n    loginMutation,\n    loginMutationVariables\n  >(LOGIN_MUTATION, {\n    onCompleted,\n  }); // useMutation으로 받는 첫번째 arg는 mutation function 이고 trigger 역할을 함\n  const onSubmit = () => {\n    const { email, password } = getValues();\n    loginMutation({\n      variables: {\n        loginInput: {\n          email,\n          password,\n        },\n      },\n    });\n  };\n  const emailRegex = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\n  return (\n    <div className=\"h-screen flex items-center justify-center bg-gray-800\">\n      <div className=\"bg-white w-full max-w-lg pt-5 pb-7 rounded-lg text-center\">\n        <h3 className=\"font-bold text-3xl text-gray-800\">Log In</h3>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className=\"grid gap-3 mt-5 px-5\"\n        >\n          <input\n            ref={register({\n              required: 'Email is required',\n              pattern: {\n                value: emailRegex,\n                message: 'Email must be type of email',\n              },\n            })}\n            required\n            name=\"email\"\n            placeholder=\"Email\"\n            className=\"mb-3 input\"\n          />\n          {errors.email?.message && (\n            <FormError errorMessage={errors.email?.message} />\n          )}\n          <input\n            ref={register({ required: 'Password is required' })}\n            required\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"input\"\n          />\n          {errors.password?.message && (\n            <FormError errorMessage={errors.password?.message} />\n          )}\n          {errors.password?.type === 'minLength' && (\n            <FormError errorMessage=\"Password must be more than 8 chars.\" />\n          )}\n          <button className=\"mt-3 btn\">Log in</button>\n          {loginMutationResult?.login.error && (\n            <FormError errorMessage={loginMutationResult.login.error} />\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n","C:\\github\\nuber-eats-frontend\\src\\pages\\create-account.tsx",[],"C:\\github\\nuber-eats-frontend\\src\\components\\form-error.tsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":21},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],["56"],["57"],"@typescript-eslint/no-unused-vars","'ApolloError' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]